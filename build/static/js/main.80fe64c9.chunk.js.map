{"version":3,"sources":["services/persons.js","components/Notification.js","components/Filter.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newContact","post","id","delete","updatedContact","put","Notification","message","isSuccess","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Filter","filter","setFilter","value","onChange","event","target","PersonForm","persons","setPersons","setMessage","setIsSuccess","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","name","duplicatePerson","find","person","toLowerCase","undefined","updatedInfo","length","alert","number","window","confirm","personService","map","setTimeout","catch","error","updateContact","returnedContact","concat","errorMessage","finally","type","Persons","onClick","contact","deleteContact","App","personsToShow","setPersonsToShow","isSucess","useEffect","initialContacts","filteredPersons","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80fe64c9.chunk.js","sourcesContent":["import axios from 'axios';\r\n// const baseUrl = 'http://localhost:3001/api/persons';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst create = (newContact) => {\r\n  const request =  axios.post(baseUrl, newContact);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst update = updatedContact => {\r\n  const request = axios.put(`${baseUrl}/${updatedContact.id}`, updatedContact);\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, remove, update };","const Notification = ({message, isSuccess}) => {\r\n\r\n  const errorStyle = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  const successStyle = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  return(\r\n    <div style={isSuccess ? successStyle : errorStyle}>{message}</div>\r\n  );\r\n}\r\n\r\nexport default Notification;","const Filter = ({ filter, setFilter } ) => {\r\n\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      filter shown with &nbsp;\r\n      <input value={filter} onChange={handleFilterChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;","import React, { useState } from 'react';\r\nimport personService from '../services/persons';\r\n\r\nconst PersonForm = ({ persons, setPersons, setMessage, setIsSuccess }) => {\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n\r\n  const findDuplicate = (name) => {\r\n    const dupe = persons.find(\r\n      person => person.name.toLowerCase() === name.toLowerCase()\r\n      \r\n    );\r\n    return dupe\r\n  }\r\n\r\n  const updateContact = (updatedInfo) => {    \r\n    if (newNumber.length === 0) {\r\n      // Do not update if number field is blank\r\n      alert(`Cannot update because number field was left blank`);\r\n    \r\n    } else if (persons.find(person => person.number === updatedInfo.number)) {\r\n      // If inputted number is similar to own number, inform user that contact info is already in phonebook\r\n      alert(`${updatedInfo.name}'s info is already in the phonebook`);\r\n      \r\n    } else {\r\n      // Update info of contact in the server if new number is different from old number\r\n        if (window.confirm(`${updatedInfo.name} is already added to phonebook, replace the old numebr with a new one?`)){\r\n          personService\r\n          .update(updatedInfo)\r\n          .then(updatedContact => {\r\n            setPersons(persons.map(person => person.id !== updatedContact.id ? person : updatedContact));\r\n            setIsSuccess(true);\r\n            setMessage(`Information of ${updatedInfo.name} has been updated`);\r\n            setTimeout(() => {\r\n              setMessage(null);\r\n            }, 5000);\r\n          })\r\n          .catch((error)=>{\r\n            setMessage(`Information of ${updatedInfo.name} has already been removed from the server`);\r\n            setIsSuccess(false);\r\n            setTimeout(() => {\r\n              setMessage(null);\r\n            }, 5000);\r\n          });\r\n        }\r\n\r\n    }\r\n  }\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault();\r\n    // Check if person to be added is already in phonebook\r\n    const duplicatePerson = findDuplicate(newName);\r\n    // Update contact info is person is already in phonebook\r\n    if (duplicatePerson !== undefined) {\r\n      const updatedInfo = { ...duplicatePerson, number: newNumber }\r\n      updateContact(updatedInfo);\r\n    } else {\r\n      const newContact = {\r\n        name: newName,\r\n        number: newNumber\r\n      };\r\n      personService\r\n        .create(newContact)\r\n        .then(returnedContact => {\r\n          setPersons(persons.concat(returnedContact));\r\n          setIsSuccess(true);\r\n          setMessage(`Added ${returnedContact.name}`);\r\n          // setTimeout(() => {\r\n          //   setMessage(null);\r\n          // }, 5000);\r\n        })\r\n        .catch(error => {\r\n          const errorMessage = error.response.data.error;\r\n          setIsSuccess(false);\r\n          setMessage(`${errorMessage}`);\r\n        })\r\n        .finally(() => {\r\n          setTimeout(() => {\r\n            setMessage(null);\r\n          }, 5000);\r\n        })\r\n    }\r\n    setNewName('');\r\n    setNewNumber('');\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  return(\r\n    <form onSubmit={addName} >\r\n    <div>\r\n      name: &nbsp;\r\n      <input value={newName} \r\n        onChange={handleNameChange} \r\n      />\r\n    </div>\r\n    <div>\r\n      number: &nbsp;\r\n      <input value={newNumber} \r\n        onChange={handleNumberChange} \r\n      />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">\r\n        add\r\n      </button>\r\n    </div>\r\n  </form>\r\n  );\r\n}\r\n\r\nexport default PersonForm;","import personService from '../services/persons';\r\n\r\nconst Persons = ({ persons, setPersons }) => {\r\n\r\n  const deleteContact = (id) => {\r\n    const contact = persons.find(person => person.id === id)\r\n    if (window.confirm(`Delete ${contact.name}?`)) {\r\n      personService\r\n        .remove(id)\r\n        .then(setPersons(persons.filter(person => person.id !== id)))\r\n      }\r\n  }\r\n  return(\r\n    <div>\r\n      {persons.map(\r\n        person => \r\n        <div key={person.name}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => deleteContact(person.id)}>delete</button>\r\n        </div>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Persons;","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport Notification from './components/Notification';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ personsToShow, setPersonsToShow ] = useState([]);\n  const [ filter, setFilter ] = useState('');\n  const [ message, setMessage ] =  useState(null);\n  const [ isSucess, setIsSuccess] = useState(true);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts);\n        setPersonsToShow(initialContacts);\n      })\n  }, []);\n  \n  useEffect(() => {\n    const filteredPersons = filter === '' \n    ? persons \n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())); \n  setPersonsToShow(filteredPersons); \n  }, [filter, persons]);\n\n  useEffect(() => {\n    setPersonsToShow(persons);\n  }, [persons]);\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {message !== null && <Notification isSuccess={isSucess} message={message }/>}\n      <Filter persons={persons} setFilter={setFilter} />\n      <h3>add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} setMessage={setMessage} setIsSuccess={setIsSuccess} />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} setPersons={setPersons} message={message}  />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}